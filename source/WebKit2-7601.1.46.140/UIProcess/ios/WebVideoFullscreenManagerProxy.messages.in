# Copyright (C) 2014 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#if PLATFORM(IOS)
messages -> WebVideoFullscreenManagerProxy {
    ResetMediaState(uint64_t contextId)
    SetCurrentTime(uint64_t contextId, double currentTime, double hostTime)
    SetBufferedTime(uint64_t contextId, double bufferedTime)
    SetVideoDimensions(uint64_t contextId, bool hasVideo, unsigned width, unsigned height)
    SetSeekableRangesVector(uint64_t contextId, Vector<std::pair<double, double>> ranges)
    SetCanPlayFastReverse(uint64_t contextId, bool value)
    SetAudioMediaSelectionOptions(uint64_t contextId, Vector<String> options, uint64_t selectedIndex)
    SetLegibleMediaSelectionOptions(uint64_t contextId, Vector<String> options, uint64_t selectedIndex)
    SetExternalPlaybackProperties(uint64_t contextId, bool enabled, uint32_t targetType, String localizedDeviceName)
    SetWirelessVideoPlaybackDisabled(uint64_t contextId, bool disabled)
    SetDuration(uint64_t contextId, double duration)
    SetRate(uint64_t contextId, bool isPlaying, double rate)
    SetupFullscreenWithID(uint64_t contextId, uint32_t videoLayerID, WebCore::IntRect initialRect, float hostingScaleFactor, WebCore::HTMLMediaElementEnums::VideoFullscreenMode videoFullscreenMode, bool allowsPictureInPicture)
    EnterFullscreen(uint64_t contextId)
    ExitFullscreen(uint64_t contextId, WebCore::IntRect finalRect)
    CleanupFullscreen(uint64_t contextId)
    PreparedToReturnToInline(uint64_t contextId, bool visible, WebCore::IntRect inlineRect)
}
#endif
