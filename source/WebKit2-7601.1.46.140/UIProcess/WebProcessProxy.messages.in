# Copyright (C) 2010, 2011 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

messages -> WebProcessProxy LegacyReceiver {
    AddBackForwardItem(uint64_t itemID, uint64_t pageID, struct WebKit::PageState pageState)
    DidDestroyFrame(uint64_t frameID) 

    ShouldTerminate() -> (bool shouldTerminate)

    EnableSuddenTermination()
    DisableSuddenTermination()

    DidFetchWebsiteData(uint64_t callbackID, struct WebKit::WebsiteData websiteData)
    DidDeleteWebsiteData(uint64_t callbackID)
    DidDeleteWebsiteDataForOrigins(uint64_t callbackID)

    # Plugin messages.
#if ENABLE(NETSCAPE_PLUGIN_API)
    GetPlugins(bool refresh) -> (Vector<WebCore::PluginInfo> plugins, Vector<WebCore::PluginInfo> applicationPlugins)
    GetPluginProcessConnection(uint64_t pluginProcessToken) -> (IPC::Attachment connectionHandle, bool supportsAsynchronousInitialization) Delayed
#endif
#if ENABLE(NETWORK_PROCESS)
    GetNetworkProcessConnection() -> (IPC::Attachment connectionHandle) Delayed
#endif
#if ENABLE(DATABASE_PROCESS)
    GetDatabaseProcessConnection() -> (IPC::Attachment connectionHandle) Delayed
#endif
    ProcessReadyToSuspend()
    DidCancelProcessSuspension()

    SetIsHoldingLockedFiles(bool isHoldingLockedFiles)

    RetainIconForPageURL(String pageURL)
    ReleaseIconForPageURL(String pageURL)
}
