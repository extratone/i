/*
 * Copyright (C) 2006 Apple Computer, Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

module events {

    interface [GenerateConstructor] MutationEvent : Event {

        // DOM Level 2

        const unsigned short MODIFICATION = 1;
        const unsigned short ADDITION     = 2;
        const unsigned short REMOVAL      = 3;

        readonly attribute Node           relatedNode;
        readonly attribute DOMString      prevValue;
        readonly attribute DOMString      newValue;
        readonly attribute DOMString      attrName;
        readonly attribute unsigned short attrChange;

        void initMutationEvent(in AtomicString typeArg, 
                               in boolean canBubbleArg, 
                               in boolean cancelableArg, 
                               in Node relatedNodeArg, 
                               in DOMString prevValueArg, 
                               in DOMString newValueArg, 
                               in DOMString attrNameArg, 
                               in unsigned short attrChangeArg);

    };

}
