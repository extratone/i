#   Copyright (C) 2004 Free Software Foundation, Inc.
#
# This Program Is Free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

# Test that we properly omit static members from varobj's.
#
# Written by Jim Ingham <jingham@apple.com>
# 

load_lib mi-support.exp
set MIFLAGS "-i=mi1"

gdb_exit
if [mi_gdb_start] {
    continue
}

set testfile "varobj-no-print-static"
set srcfile ${testfile}.cc

set binfile ${objdir}/${subdir}/${testfile}
if  { [gdb_compile "$srcdir/$subdir/$srcfile" "${binfile}" executable {c++ debug}] != "" } {
    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

mi_delete_breakpoints
mi_gdb_reinitialize_dir $srcdir/$subdir
mi_gdb_load ${binfile}

mi_run_to_main
mi_next {Next so mine is initialized}

mi_gdb_test {-var-create - * mine} {.*name="var1",numchild="3",type="Foo",typecode="STRUCT",dynamic_type="",in_scope="true".*} {create variable for mine}

mi_gdb_test {-var-list-children var1} {.*numchild="3",children=\[child={name="var1.public",exp="public",numchild="1",type="",typecode="FAKE_CHILD",dynamic_type=""},child={name="var1.private",exp="private",numchild="1",type="",typecode="FAKE_CHILD",dynamic_type=""},child={name="var1.protected",exp="protected",numchild="2",type="",typecode="FAKE_CHILD",dynamic_type=""}\]} {list children of var1}

mi_gdb_test {-var-list-children var1.public} {.*numchild="1",children=\[child={name="var1.public.first",exp="first",numchild="0",type="int",typecode="INT",dynamic_type=""}\]} {list children of var1.public}

mi_gdb_test {-var-list-children var1.protected} {.*numchild="2",children=\[child={name="var1.protected.second",exp="second",numchild="0",type="int",typecode="INT",dynamic_type=""},child={name="var1.protected.third",exp="third",numchild="0",type="int",typecode="INT",dynamic_type=""}\]} {list children of var1.protected}

mi_gdb_test {-var-list-children var1.private} {.*numchild="1",children=\[child={name="var1.private.fourth",exp="fourth",numchild="0",type="int",typecode="INT",dynamic_type=""}\]} {list children of var1.private}

mi_gdb_test {-var-evaluate-expression var1.public.first} {.*value="10"} {value of var1.public.first}
mi_gdb_test {-var-evaluate-expression var1.protected.second} {.*value="20"} {value of var1.protected.second}
mi_gdb_test {-var-evaluate-expression var1.protected.third} {.*value="30"} {value of var1.protected.third}
mi_gdb_test {-var-evaluate-expression var1.private.fourth} {.*value="40"} {value of var1.private.fourth}

mi_gdb_exit

return 0
