#rdar://problem/6473222 copy-constructing a std::vector from an empty std::vector calls malloc

diff -upr libstdc++-v3/include/bits/stl_vector.h libstdc++-v3/include/bits/stl_vector.h
--- libstdc++-v3/include/bits/stl_vector.h	2009-01-06 17:33:39.000000000 -0500
+++ libstdc++-v3/include/bits/stl_vector.h	2006-09-20 20:11:52.000000000 -0400
@@ -111,9 +111,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GL
       _Vector_base(size_t __n, const allocator_type& __a)
       : _M_impl(__a)
       {
-	this->_M_impl._M_start = this->_M_allocate(__n);
-	this->_M_impl._M_finish = this->_M_impl._M_start;
-	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
+	  if (__n)
+	  {
+	    this->_M_impl._M_start = this->_M_allocate(__n);
+	    this->_M_impl._M_finish = this->_M_impl._M_start;
+	    this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
+	  }
       }
 
       ~_Vector_base()

--- /dev/null	2009-01-06 17:44:13.000000000 -0500
+++ libstdc++-v3/testsuite/23_containers/vector/cons/copy_no_alloc.cc	2009-01-06 17:39:50.000000000 -0500
@@ -0,0 +1,37 @@
+// 2009-01-06 Howard Hinnant
+
+// Copyright (C) 2009
+// Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
+// USA.
+
+// vector copy construction of zero-sized vector should not allocate
+
+#include <vector>
+#include <new>
+
+void* operator new(std::size_t size) throw(std::bad_alloc)
+{
+    throw std::bad_alloc();
+    void* p = 0;
+    return p;
+}
+
+int main() {
+  std::vector<int> X;
+  std::vector<int> Y(X);
+}
