##
# Copyright (c) 2005 Apple Computer, Inc. All rights reserved.
#
# @APPLE_LICENSE_HEADER_START@
# 
# This file contains Original Code and/or Modifications of Original Code
# as defined in and that are subject to the Apple Public Source License
# Version 2.0 (the 'License'). You may not use this file except in
# compliance with the License. Please obtain a copy of the License at
# http://www.opensource.apple.com/apsl/ and read it before using this
# file.
# 
# The Original Code and all software distributed under the License are
# distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
# INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
# Please see the License for the specific language governing rights and
# limitations under the License.
# 
# @APPLE_LICENSE_HEADER_END@
##
TESTROOT = ../..
include ${TESTROOT}/include/common.makefile

# Test the ld commands -stack_addr, -stack_size
# Test using -stack_addr only


ifeq (,${findstring 64,$(ARCH)})
	STACK_ADDR = 0xC0000000
	STACK_SIZE = 0x04000000
	STACK_TOP  = 0xbc000000
else
#ifeq (${ARCH},x86_64)
	STACK_ADDR = 0x0007fff5fc000000
	STACK_TOP  = 0x00007fff57000000
	STACK_SIZE = 0x0000000005000000
#else
	#STACK_ADDR = 0x0007ffff00000000
	#STACK_TOP  = 0x0007fffefb000000
	#STACK_SIZE = 0x0000000005000000
#endif
endif


run: all

all:
# info seems to not work, use warning:
	${FAIL_IF_ERROR} ${CC} ${CCFLAGS} -c main.c -o main-${ARCH}.o


	${FAIL_IF_ERROR} ${LD} -arch ${ARCH} \
		-stack_addr ${STACK_ADDR} \
		-lcrt1.o -lSystem \
		main-${ARCH}.o -o main \
		2>lderr.out

# Can check warning if desired.
#ifeq (,${findstring 64,$(ARCH)})
#	grep "warning no -stack_size specified using the default size" lderr.out | ${FAIL_IF_EMPTY}
#else
#	grep "failed: -stack_addr must be used with -stack_size" lderr.out | ${FAIL_IF_EMPTY}
#endif

	
# Check for __UNIXSTACK section in object, check that it has the correct value
	${FAIL_IF_ERROR} ${OTOOL} -l main>ldcmds.out
	(echo '1,/^[ ]*segname __UNIXSTACK$$/-d'; echo '/^[ ]*segname /,$$d'; echo w; echo q) | ed ldcmds.out >/dev/null
	grep __UNIXSTACK ldcmds.out | ${FAIL_IF_EMPTY}
	grep " vmsize[ ]*${STACK_SIZE}" ldcmds.out | ${FAIL_IF_EMPTY}
	grep " vmaddr[ ]*${STACK_TOP}" ldcmds.out | ${FAIL_IF_EMPTY}
	${PASS_IFF_GOOD_MACHO} main

clean:
	rm -rf *.o *.err *.out main
